(set .c1 (input :conclusion ((p a))))
(set .c2 (input :conclusion ((not (= b (ite (p a) b a))))))
(set .c3 (ite_intro :conclusion ((= (not (= b (ite (p a) b a))) (and (not (= b (ite (p a) b a))) (ite (p a) (= b (ite (p a) b a)) (= a (ite (p a) b a))))))))
(set .c4 (equiv_pos2 :conclusion ((not (= (not (= b (ite (p a) b a))) (and (not (= b (ite (p a) b a))) (ite (p a) (= b (ite (p a) b a)) (= a (ite (p a) b a)))))) (= b (ite (p a) b a)) (and (not (= b (ite (p a) b a))) (ite (p a) (= b (ite (p a) b a)) (= a (ite (p a) b a)))))))
(set .c5 (th_resolution :clauses (.c2 .c3 .c4) :conclusion ((and (not (= b (ite (p a) b a))) (ite (p a) (= b (ite (p a) b a)) (= a (ite (p a) b a)))))))
(set .c6 (and :clauses (.c5) :conclusion ((not (= b (ite (p a) b a))))))
(set .c7 (and :clauses (.c5) :conclusion ((ite (p a) (= b (ite (p a) b a)) (= a (ite (p a) b a))))))
(set .c8 (ite2 :clauses (.c7) :conclusion ((not (p a)) (= b (ite (p a) b a)))))
(set .c9 (resolution :clauses (.c8 .c1 .c6) :conclusion ()))
